name: MERN CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push backend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/mern-backend:${{ github.sha }} ./server
          docker push ${{ secrets.DOCKER_USERNAME }}/mern-backend:${{ github.sha }}
          docker tag ${{ secrets.DOCKER_USERNAME }}/mern-backend:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/mern-backend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/mern-backend:latest

      - name: Build & Push frontend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/mern-frontend:${{ github.sha }} ./client
          docker push ${{ secrets.DOCKER_USERNAME }}/mern-frontend:${{ github.sha }}
          docker tag ${{ secrets.DOCKER_USERNAME }}/mern-frontend:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/mern-frontend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/mern-frontend:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    
    steps:
      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT || '22' }}
          script: |
            cd ~/app
            
            # Create .env file with secrets
            cat << EOF > .env
            DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}
            MONGO_URL=${{ secrets.MONGO_URL }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            CHATBOT_API_KEY=${{ secrets.CHATBOT_API_KEY }}
            EOF
            
            # Login to Docker Hub
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            
            # Pull latest images and restart services
            docker-compose pull
            docker-compose up -d --remove-orphans
            
            # Clean up unused images
            docker image prune -f